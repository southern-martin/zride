name: Release Pipeline

on:
  push:
    branches: [ master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master ]
    types: [ opened, synchronize, reopened ]

env:
  GO_VERSION: 1.21
  NODE_VERSION: 18

jobs:
  test-and-build:
    name: Test and Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Run backend tests
      working-directory: ./backend
      run: |
        go mod download
        go test -race -coverprofile=coverage.out ./...
        
    - name: Build backend services
      working-directory: ./backend
      run: |
        make build
        
    - name: Build frontend
      working-directory: ./frontend/zalo-mini-app
      run: |
        npm ci
        npm run build
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: |
          backend/bin/
          frontend/zalo-mini-app/dist/
          
  docker-build-and-push:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    needs: test-and-build
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: zride/app
        tags: |
          type=ref,event=branch
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          
    - name: Build and push Docker images
      run: |
        docker-compose build
        docker-compose push
        
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: docker-build-and-push
    if: github.ref == 'refs/heads/master'
    environment: staging
    
    steps:
    - name: Deploy to staging
      run: |
        echo "🚀 Deploying to staging environment..."
        # Add your staging deployment commands here
        
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: docker-build-and-push
    if: startsWith(github.ref, 'refs/tags/v')
    environment: production
    
    steps:
    - name: Deploy to production
      run: |
        echo "🚀 Deploying to production environment..."
        # Add your production deployment commands here
        
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: test-and-build
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-artifacts
        path: ./artifacts
        
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        body: |
          ## 🚀 What's New in This Release
          
          ### 🎯 Features
          - Feature 1 description
          - Feature 2 description
          
          ### 🐛 Bug Fixes
          - Bug fix 1 description
          - Bug fix 2 description
          
          ### 🔧 Technical Improvements
          - Technical improvement 1
          - Technical improvement 2
          
          ### 📦 Deployment
          This release has been automatically deployed to production.
          
          ### 🧪 Testing
          All automated tests have passed successfully.
          
          ---
          **Full Changelog**: https://github.com/${{ github.repository }}/compare/v1.0.0...${{ github.ref_name }}